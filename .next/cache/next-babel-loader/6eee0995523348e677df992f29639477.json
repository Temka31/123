{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/tema/my-app/123/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../components/MyLayout\";\nimport Box from \"@material-ui/core/Box\";\nimport fetch from \"isomorphic-unfetch\";\nimport MediaCard from \"../components/MediaCard\";\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\",\n    flexGrow: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return __jsx(MediaCard, {\n      key: show.id,\n      show: show,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    });\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/search/shows?q=batman\"));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", {\n            shows: []\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 11]]);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/tema/my-app/123/pages/index.js"],"names":["React","Layout","Box","fetch","MediaCard","Index","props","shows","map","show","id","getInitialProps","res","json","data","console","log","length","entry"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,aAAa,EAAC,KAAlC;AAAwC,IAAA,UAAU,EAAC,QAAnD;AAA4D,IAAA,QAAQ,EAAC,MAArE;AAA4E,IAAA,QAAQ,EAAE,CAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACnB,MAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,IAAI,CAACC,EAArB;AAAyB,MAAA,IAAI,EAAED,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADmB;AAAA,GAApB,CADH,CADF,CADiB;AAAA,CAAnB;;AAUAJ,KAAK,CAACM,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEFR,KAAK,CAAC,8CAAD,CAFH;;AAAA;AAEdS,UAAAA,GAFc;AAAA;AAAA,2CAGDA,GAAG,CAACC,IAAJ,EAHC;;AAAA;AAGdC,UAAAA,IAHc;AAKpBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AALoB,2CAOb;AACLV,YAAAA,KAAK,EAAEO,IAAI,CAACN,GAAL,CAAS,UAAAU,KAAK;AAAA,qBAAIA,KAAK,CAACT,IAAV;AAAA,aAAd;AADF,WAPa;;AAAA;AAAA;AAAA;AAAA,2CAWb;AACLF,YAAAA,KAAK,EAAE;AADF,WAXa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAiBA,eAAeF,KAAf","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/MyLayout\";\nimport Box from \"@material-ui/core/Box\";\nimport fetch from \"isomorphic-unfetch\";\nimport MediaCard from \"../components/MediaCard\";\n\nconst Index = props => (\n  <Layout>\n    <Box display=\"flex\" flexDirection=\"row\" alignItems='center' flexWrap=\"wrap\" flexGrow={1}>\n      {props.shows.map(show => (\n        <MediaCard key={show.id} show={show} />\n      ))}\n    </Box>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n  try {\n    const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\n    const data = await res.json();\n\n    console.log(`Show data fetched. Count: ${data.length}`);\n\n    return {\n      shows: data.map(entry => entry.show)\n    };\n  } catch {\n    return {\n      shows: []\n    };\n  }\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}