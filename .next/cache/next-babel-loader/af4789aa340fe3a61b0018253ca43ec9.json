{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/tema/my-app/123/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Main from '../components/main';\nimport Layout from '../components/MyLayout';\nimport Box from '@material-ui/core/Box';\nimport fetch from \"isomorphic-unfetch\";\nimport MediaCard from '../components/Card';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    flexGrow: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return __jsx(MediaCard, {\n      key: show.id,\n      show: show,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.tvmaze.com/search/shows?q=batman'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/tema/my-app/123/pages/index.js"],"names":["React","Main","Layout","Box","fetch","MediaCard","Index","props","shows","map","show","id","getInitialProps","res","json","data","console","log","length","entry"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,MAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,aAAa,EAAC,KAAlC;AAAwC,IAAA,QAAQ,EAAC,MAAjD;AAAwD,IAAA,QAAQ,EAAE,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACnB,MAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,IAAI,CAACC,EAArB;AAAyB,MAAA,IAAI,EAAED,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADmB;AAAA,GAApB,CADH,CADH,CADgB;AAAA,CAAnB;;AAeAJ,KAAK,CAACM,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACFR,KAAK,CAAC,8CAAD,CADH;;AAAA;AACdS,UAAAA,GADc;AAAA;AAAA,2CAEDA,GAAG,CAACC,IAAJ,EAFC;;AAAA;AAEdC,UAAAA,IAFc;AAIpBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAJoB,2CAMb;AACLV,YAAAA,KAAK,EAAEO,IAAI,CAACN,GAAL,CAAS,UAAAU,KAAK;AAAA,qBAAIA,KAAK,CAACT,IAAV;AAAA,aAAd;AADF,WANa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAWE,eAAeJ,KAAf","sourcesContent":["import React from 'react';\nimport Main from '../components/main';\nimport Layout from '../components/MyLayout';\nimport Box from '@material-ui/core/Box';\nimport fetch from \"isomorphic-unfetch\";\nimport MediaCard from '../components/Card'\n\n\nconst Index = props => (\n   <Layout>\n      <Box display='flex' flexDirection='row' flexWrap='wrap' flexGrow={1}>  \n        {props.shows.map(show => (\n          <MediaCard key={show.id} show={show} />\n        ))}\n      </Box>   \n      \n  </Layout>\n  \n);\n\n\n\n\nIndex.getInitialProps = async function() {\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n    const data = await res.json();\n  \n    console.log(`Show data fetched. Count: ${data.length}`);\n  \n    return {\n      shows: data.map(entry => entry.show)\n    };\n  };\n  \n  export default Index;"]},"metadata":{},"sourceType":"module"}